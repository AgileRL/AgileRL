---
# Define initial hyperparameters
INIT_HP:
    ENV_NAME: MinAtar/Breakout-v1   # Gym environment name
    ALGO: DQN                                         # Algorithm
    DOUBLE: false
  # Swap image channels dimension from last to first [H, W, C] -> [C, H, W]
    CHANNELS_LAST: true
    BATCH_SIZE: 64            # Batch size
    LR: 0.001              # Learning rate
    EPISODES: 1000             # Max no. episodes
    TARGET_SCORE: 200.         # Early training stop at avg score of last 100 episodes
    GAMMA: 0.99                # Discount factor
    MEMORY_SIZE: 100000        # Max memory buffer size
    POLICY_FREQ: 2             # Policy update frequency
    LEARN_STEP: 1              # Learning frequency
    TAU: 0.001                 # For soft update of target parameters
    TOURN_SIZE: 2              # Tournament size
    ELITISM: true              # Elitism in tournament selection
    POP_SIZE: 2                # Population size
    EVO_EPOCHS: 20             # Evolution frequency
    WANDB: true              # Log with Weights and Biases

MUTATION_PARAMS:
    NO_MUT: 0.4                            # No mutation
    ARCH_MUT: 0.2                          # Architecture mutation
    NEW_LAYER: 0.2                         # New layer mutation
    PARAMS_MUT: 0.2                          # Network parameters mutation
    ACT_MUT: 0.2                           # Activation layer mutation
    RL_HP_MUT: 0.2                         # Learning HP mutation
  # Learning HPs to choose from
    RL_HP_SELECTION: [lr, batch_size]
    MUT_SD: 0.1                            # Mutation strength
    RAND_SEED: 42                          # Random seed
    MIN_LR: 0.0000625                          # Define max and min limits for mutating RL hyperparams
    MAX_LR: 0.01
    MIN_BATCH_SIZE: 8
    MAX_BATCH_SIZE: 512


# NET_CONFIG: {arch: mlp, hidden_size: [64, 64], mlp_activation: ReLU, mlp_output_activation: null, min_hidden_layers: 1, max_hidden_layers: 3, min_mlp_nodes: 64,
#     max_mlp_nodes: 500}

NET_CONFIG: {arch: cnn, hidden_size: [16], channel_size: [16, 32], kernel_size: [5, 3], stride_size: [1, 1], normalize: false}
